# Functions for ksh/bash that helps manipulate path variables, such as
# PATH, MANPATH etc.

function delete_from_path {
    typeset -n _dfp_variable="$1"
    typeset value="$2"

    if [[ "$_dfp_variable" == "$value" ]]; then
        variable=""
    else
        while [[ "$_dfp_variable" == *:"$value":* ]] ||
              [[ "$_dfp_variable" == "$value":*   ]] ||
              [[ "$_dfp_variable" == *:"$value"   ]];
        do
            _dfp_variable="${_dfp_variable//:$value:/:}"
            _dfp_variable="${_dfp_variable/#$value:/}"
            _dfp_variable="${_dfp_variable/%:$value/}"
        done
    fi
}

function prefix_path
{
    typeset -n _pp_variable="$1"
    typeset value="$2"

    if [[ -z "$_pp_variable" ]]; then
        _pp_variable="$value"
    elif [[ "$_pp_variable" != "$value" ]]; then
        delete_from_path _pp_variable "$value"
        _pp_variable="$value:$_pp_variable"
    fi
}

function suffix_path
{
    typeset -n _sp_variable="$1"
    typeset value="$2"

    if [[ -z "$_sp_variable" ]]; then
        _sp_variable="$value"
    elif [[ "$_sp_variable" != "$value" ]]; then
        delete_from_path _sp_variable "$value"
        _sp_variable="$_sp_variable:$value"
    fi
}

function consolidate_path
{
    typeset -n _cp_variable="$1"

    typeset IFS=':'
    typeset tmpvar=""
    typeset element

    for element in $_cp_variable; do
        if  [[ "$tmpvar" != *:"$element":* ]] &&
            [[ "$tmpvar" != "$element":*   ]] &&
            [[ "$tmpvar" != *:"$element"   ]]
        then
            suffix_path tmpvar "$element"
        fi
    done

    _cp_variable="$tmpvar"
}

# vim: filetype=sh
